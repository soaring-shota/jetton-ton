"Asm.fif" include
PROGRAM{
  DECLPROC force_chain
  DECLPROC is_resolvable?
  DECLPROC pack_jetton_wallet_data
  DECLPROC calculate_jetton_wallet_state_init
  DECLPROC calculate_jetton_wallet_address
  DECLPROC calculate_user_jetton_wallet_address
  DECLPROC load_data
  DECLPROC save_data
  DECLPROC send_to_jetton_wallet
  DECLPROC recv_internal
  DECLPROC build_content_cell
  106029 DECLMETHOD get_jetton_data
  103289 DECLMETHOD get_wallet_address
  force_chain PROC:<{
    REWRITESTDADDR
    DROP
    0 EQINT
    333 THROWIFNOT
  }>
  is_resolvable? PROCINLINE:<{
    REWRITESTDADDR
    DROP
    0 EQINT
  }>
  pack_jetton_wallet_data PROCINLINE:<{
    s0 s4 XCHG
    NEWC
    4 STU
    s0 s3 XCHG2
    STGRAMS
    SWAP
    STSLICER
    SWAP
    STSLICER
    STREF
    ENDC
  }>
  calculate_jetton_wallet_state_init PROCINLINE:<{
    0 PUSHINT
    s0 s(-1) s2 PU2XC
    s1 s3 XCHG
    s5 s0 s5 XC2PU
    pack_jetton_wallet_data INLINECALLDICT
    OVER
    NEWC
    2 STU
    s1 s3 XCHG
    STDICT
    s1 s2 XCHG
    STDICT
    1 STU
    ENDC
  }>
  calculate_jetton_wallet_address PROCINLINE:<{
    HASHCU
    0 PUSHINT
    4 PUSHINT
    NEWC
    3 STU
    8 STI
    256 STU
    ENDC
    CTOS
  }>
  calculate_user_jetton_wallet_address PROCINLINE:<{
    calculate_jetton_wallet_state_init INLINECALLDICT
    calculate_jetton_wallet_address INLINECALLDICT
  }>
  load_data PROCINLINE:<{
    c4 PUSH
    CTOS
    LDGRAMS
    LDMSGADDR
    LDMSGADDR
    LDREF
    ENDS
  }>
  save_data PROCINLINE:<{
    NEWC
    s0 s4 XCHG2
    STGRAMS
    ROT
    STSLICER
    SWAP
    STSLICER
    STREF
    ENDC
    c4 POP
  }>
  send_to_jetton_wallet PROC:<{
    MYADDR
    s5 s0 s4 XCHG3
    calculate_jetton_wallet_state_init INLINECALLDICT
    DUP
    calculate_jetton_wallet_address INLINECALLDICT
    s3 PUSH
    IF:<{
      7 PUSHINT
    }>ELSE<{
      1 PUSHINT
    }>
    24 PUSHINT
    NEWC
    6 STU
    ROT
    STSLICER
    s0 s3 XCHG2
    STGRAMS
    s3 PUSH
    IF:<{
      108 PUSHINT
    }>ELSE<{
      107 PUSHINT
    }>
    s2 s3 XCHG
    STUX
    s0 s2 XCHG
    IF:<{
      SWAP
      STREF
    }>ELSE<{
      DROP
    }>
    STREF
    ENDC
    1 PUSHINT
    SENDRAWMSG
  }>
  recv_internal PROC:<{
    DUP
    SEMPTY
    IFJMP:<{
      3 BLKDROP
    }>
    SWAP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    IFJMP:<{
      DROP
      NIP
      32 PUSHINT
      SDSKIPFIRST
      32 LDU
      SWAP
      395134233 PUSHINT
      EQUAL
      IFNOTJMP:<{
        DROP
      }>
      64 PUSHINT
      SDSKIPFIRST
      LDGRAMS
      DROP
      load_data INLINECALLDICT
      s3 s4 XCHG2
      SUB
      s2 s3 XCHG2
      save_data INLINECALLDICT
    }>
    LDMSGADDR
    LDMSGADDR
    NIP
    LDGRAMS
    NIP
    1 PUSHINT
    SDSKIPFIRST
    LDGRAMS
    NIP
    LDGRAMS
    DROP
    3 PUSHINT
    1 MULRSHIFT#
    s0 s2 XCHG
    32 LDU
    64 LDU
    load_data INLINECALLDICT
    s6 PUSH
    21 EQINT
    IFJMP:<{
      s5 POP
      s5 POP
      s7 POP
      s4 s6 XCPU
      SDEQ
      73 THROWIFNOT
      LDMSGADDR
      OVER
      force_chain CALLDICT
      LDGRAMS
      20000000 PUSHINT
      s0 s7 XCHG2
      ADD
      s1 s(-1) PUXC
      GEQ
      72 THROWIFNOT
      s0 s5 XCHG
      LDREF
      DROP
      DUP
      CTOS
      32 LDU
      SWAP
      395134233 PUSHINT
      EQUAL
      72 THROWIFNOT
      64 PUSHINT
      SDSKIPFIRST
      LDGRAMS
      LDMSGADDR
      NIP
      LDMSGADDR
      NIP
      LDGRAMS
      NIP
      1 LDI
      SWAP
      IF:<{
        LDREF
        NIP
      }>
      ENDS
      s3 s6 s(-1) PUXC2
      1 PUSHINT
      send_to_jetton_wallet CALLDICT
      s2 s3 XCHG2
      ADD
      s3 s1 s3 XCHG3
      save_data INLINECALLDICT
    }>
    s6 PUSH
    2078119902 PUSHINT
    EQUAL
    IFJMP:<{
      s6 POP
      s7 POP
      s7 POP
      SWAP
      LDGRAMS
      LDMSGADDR
      MYADDR
      s2 s0 s6 XC2PU
      calculate_user_jetton_wallet_address INLINECALLDICT
      s0 s6 XCHG2
      SDEQ
      74 THROWIFNOT
      SUB
      s0 s3 XCHG
      s5 s4 s5 XCHG3
      save_data INLINECALLDICT
      SWAP
      LDMSGADDR
      DROP
      DUP
      2 PLDU
      0 NEQINT
      IF:<{
        3576854235 PUSHINT
        0 PUSHINT
        16 PUSHINT
        NEWC
        6 STU
        s0 s3 XCHG2
        STSLICER
        s2 PUSH
        STGRAMS
        s1 s2 XCHG
        107 STU
        32 STU
        64 STU
        ENDC
        66 PUSHINT
        SENDRAWMSG
      }>ELSE<{
        2DROP
      }>
    }>
    s6 PUSH
    745978227 PUSHINT
    EQUAL
    IFJMP:<{
      s6 POP
      3 BLKDROP
      s0 s4 XCHG
      10000000 PUSHINT
      ADD
      s1 s5 XCHG
      GREATER
      75 THROWIFNOT
      s0 s2 XCHG
      LDMSGADDR
      1 LDU
      DROP
      IF:<{
        NEWC
        OVER
        STSLICER
        ENDC
      }>ELSE<{
        PUSHNULL
      }>
      3513996288 PUSHINT
      0 PUSHINT
      24 PUSHINT
      NEWC
      6 STU
      s0 s5 XCHG2
      STSLICER
      s4 PUSH
      STGRAMS
      s1 s4 XCHG
      107 STU
      s1 s3 XCHG
      32 STU
      s1 s4 XCHG
      64 STU
      s3 PUSH
      is_resolvable? INLINECALLDICT
      IF:<{
        MYADDR
        s4 s0 s3 XCHG3
        calculate_user_jetton_wallet_address INLINECALLDICT
        STSLICER
      }>ELSE<{
        2 2 BLKDROP2
        0 PUSHINT
        SWAP
        2 STU
      }>
      STOPTREF
      ENDC
      64 PUSHINT
      SENDRAWMSG
    }>
    s5 POP
    s7 POP
    s7 POP
    s3 PUSH
    3 EQINT
    IFJMP:<{
      s3 POP
      s4 POP
      s2 s4 XCPU
      SDEQ
      73 THROWIFNOT
      s0 s2 XCHG
      LDMSGADDR
      DROP
      s3 s0 s0 XCHG3
      save_data INLINECALLDICT
    }>
    s3 PUSH
    4 EQINT
    IFJMP:<{
      NIP
      s2 POP
      s4 POP
      s1 s2 XCPU
      SDEQ
      73 THROWIFNOT
      <b 0 2 u, b> <s PUSHSLICE
      s0 s3 XCHG2
      save_data INLINECALLDICT
    }>
    DROP
    s4 POP
    OVER
    6 EQINT
    IFJMP:<{
      NIP
      s0 s3 XCHG
      SDEQ
      73 THROWIFNOT
      LDMSGADDR
      LDGRAMS
      LDREF
      DROP
      DUP
      CTOS
      32 LDU
      64 LDU
      NIP
      OVER
      260734629 PUSHINT
      EQUAL
      IF:<{
        NIP
        LDGRAMS
        NIP
        LDMSGADDR
        NIP
        LDMSGADDR
        NIP
        LDOPTREF
        NIP
        LDGRAMS
        NIP
        1 LDI
        SWAP
        IF:<{
          LDREF
          NIP
        }>
        ENDS
      }>ELSE<{
        OVER
        1499400124 PUSHINT
        EQUAL
        IF:<{
          NIP
          LDGRAMS
          NIP
          LDMSGADDR
          NIP
          LDOPTREF
          NIP
          ENDS
        }>ELSE<{
          OVER
          100 EQINT
          IF:<{
            NIP
            ENDS
          }>ELSE<{
            SWAP
            101 EQINT
            IF:<{
              ENDS
            }>ELSE<{
              DROP
              72 THROW
            }>
          }>
        }>
      }>
      s2 s3 XCHG
      0 PUSHINT
      send_to_jetton_wallet CALLDICT
    }>
    DROP
    5 EQINT
    IFJMP:<{
      ROT
      SDEQ
      73 THROWIFNOT
      LDREF
      LDREF
      DROP
      SWAP
      c4 POP
      SETCODE
    }>
    3 BLKDROP
    16 PUSHPOW2DEC
    THROWANY
  }>
  build_content_cell PROC:<{
    NEWDICT
    0 PUSHINT
    NEWC
    8 STU
    x{746f6e2d737461626c652e746f6e} PUSHSLICE
    STSLICER
    ENDC
    51065135818459385347574250312853146822620586594996463797054414300406918686668 PUSHINT
    ROT
    8 PUSHPOW2
    DICTUSETREF
    0 PUSHINT
    NEWC
    8 STU
    x{39} PUSHSLICE
    STSLICER
    ENDC
    107878361799212983662495570378745491379550006934010968359181619763835345146430 PUSHINT
    ROT
    8 PUSHPOW2
    DICTUSETREF
    0 PUSHINT
    NEWC
    8 STU
    x{546f6e20537461626c6520436f696e} PUSHSLICE
    STSLICER
    ENDC
    59089242681608890680090686026688704441792375738894456860693970539822503415433 PUSHINT
    ROT
    8 PUSHPOW2
    DICTUSETREF
    0 PUSHINT
    NEWC
    8 STU
    x{f09f92b5} PUSHSLICE
    STSLICER
    ENDC
    82961397245523513629401799123410942652413991882008909918554405086738284660097 PUSHINT
    ROT
    8 PUSHPOW2
    DICTUSETREF
    0 PUSHINT
    NEWC
    8 STU
    STDICT
    ENDC
  }>
  get_jetton_data PROC:<{
    load_data INLINECALLDICT
    NIP
    -1 PUSHINT
    build_content_cell CALLDICT
    s3 s0 s3 XCHG3
  }>
  get_wallet_address PROC:<{
    load_data INLINECALLDICT
    3 1 BLKDROP2
    MYADDR
    SWAP
    calculate_user_jetton_wallet_address INLINECALLDICT
  }>
}END>c

